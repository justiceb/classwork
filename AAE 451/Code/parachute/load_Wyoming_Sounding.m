function data = load_Wyoming_Sounding(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [PRES,HGHT,TEMP1,DWPT,RELH,MIXR,DRCT,SKNT,THTA,THTE,THTV] =
%   IMPORTFILE(FILENAME) Reads data from text file FILENAME for the default
%   selection.
%
%   [PRES,HGHT,TEMP1,DWPT,RELH,MIXR,DRCT,SKNT,THTA,THTE,THTV] =
%   IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [PRES,HGHT,TEMP1,DWPT,RELH,MIXR,DRCT,SKNT,THTA,THTE,THTV] =
%   importfile('12Z_04_May_2014.csv',3, 88);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/05/04 21:36:54

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 3;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
data.PRES = dataArray{:, 1}*100; %Pa
data.HGHT = dataArray{:, 2};     %m
data.TEMP1 = dataArray{:, 3};    %C
data.DWPT = dataArray{:, 4};     %C
data.RELH = dataArray{:, 5};     %%
data.MIXR = dataArray{:, 6};     %g/kg
data.DRCT = dataArray{:, 7};     %deg
data.SPEED = dataArray{:, 8};    %knot
data.THTA = dataArray{:, 9};     %K
data.THTE = dataArray{:, 10};    %K
data.THTV = dataArray{:, 11};    %K

%modify raw config data before passing it
data.SPEED = data.SPEED*0.514444;                         %convert windspeed to m/s
data.DRCT = -data.DRCT+270;                             %convert to degrees where 0=east, 90=north
data.DRCT = unwrap(data.DRCT*0.0174532925)*57.2957795;  %preserve angle continuity since we will be interpolating this data

